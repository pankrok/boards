{% extends 'templates/main.twig' %}

{% block content %}

<main class="content-wrapper">

  <div class="container-fluid">
  <h1>{{ trans('managment') }}</h1>
  <div id="cat-sort">
  	<!-- board -->
	{% for category in categories %}	
		<li id="cate-{{ category.cat_id }}" class="card border-light mb-3 category-sortable">
			<div class="card-header"><i class="fas fa-clipboard-list"></i> <a href="{{ base_url()}}/category/{{ setString.toUrl(category.name) }}/{{ category.cat_id }}">{{ category.name|raw }}</a>
			<span class="float-right">
				<button value='up' class="btn btn-outline-secondary category">Up</button>
				<button value='down' class="btn btn-outline-secondary category">Down</button>
			</span>
			</div>
				<div class="card-body px-0 py-1 collapse show" id="board-{{ category.cat_id }}">
					<ul id="sortable" class="list-group list-group-flush sortable">
						{% for board in category.boards %}						
						<li id="item-{{ board.id }}" class="list-group-item {% if board.id is even %}bg-white{% else %}bg-light{% endif %} board-sortable">
							<div class="row w-100">
							<div class="col-2 col-md-1 pl-3 {{ board.read }} text-center"><i class="fas fa-comment"></i></div>
							<div class="col-10 col-md-5">
								<div class="row">
									<div class="col-12 fs-15"><a href="{{ base_url()}}/board/{{ setString.toUrl(board.board_name) }}/{{ board.id }}">{{ board.board_name|raw }}</a></div>
									<div class="col-12 fs-12">{{ board.board_description|raw }}</div>
								</div>
							</div>
							<div class="col-2 mx-auto d-none d-md-block">
								<span class="float-right">
									<button value='up' class="btn btn-outline-secondary board">Up</button>
									<button value='down' class="btn btn-outline-secondary board">Down</button>
								</span>
							</div>
							<div class="col-3 d-none d-md-block">
								<div class="row text-center fs-12">
								{% set last = board.last %}
								{% if last.plot_name %}
								<div class="col-12"><a href="{{ base_url() }}/plot/{{ setString.toUrl(last.plot_name) }}/{{ last.plot_id }}/{{ board.endpage }}#post-{{ last.id }}">{{ last.plot_name }}</a> by 
								
								<div class="col-12"><i class="far fa-clock"></i> {{ last.created_at }}</div>
								{% else %}
								<div class="col-12"> - </div>
								{% endif %}
								</div>
							</div>
							</div>
						</li>
						{% endfor %}					
					</ul>
				</div>
		
	
	{% endfor %}
	<!-- /board -->	
	</div>
	</div>
</main>

{% endblock %}
{% block endcontent %}
{{ csrf.field | raw }}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>
<script>

function ajaxOrder(order)
{
console.log(order);
			var csrfName = $('#csrf_name').val();
			var csrfValue = $('#csrf_value').val();
	         
            $.ajax({
				
                data: { 
					  'order': order,
					  "csrf_name" : csrfName,
					  "csrf_value" : csrfValue
					},
                type: 'POST',
                url: '{{ path_for('admin.ajax.border') }}',
				success: function(mydata){	
					$('#csrf_name').val(mydata['csrf']['csrf_name']);
					$('#csrf_value').val(mydata['csrf']['csrf_value']);
					
				}
            });

}

function sendOrderToServer() {

}

function moveUp(item) {
    var prev = item.prev();
    if (prev.length == 0)
        return;
    prev.css('z-index', 999).css('position','relative').animate({ top: item.height() }, 250);
    item.css('z-index', 1000).css('position', 'relative').animate({ top: '-' + prev.height() }, 300, function () {
        prev.css('z-index', '').css('top', '').css('position', '');
        item.css('z-index', '').css('top', '').css('position', '');
        item.insertBefore(prev);
		var items = $("div#cat-sort").sortable('serialize');
		ajaxOrder(items);
    });
}
function moveDown(item) {
    var next = item.next();
    if (next.length == 0)
        return;
    next.css('z-index', 999).css('position', 'relative').animate({ top: '-' + item.height() }, 250);
    item.css('z-index', 1000).css('position', 'relative').animate({ top: next.height() }, 300, function () {
        next.css('z-index', '').css('top', '').css('position', '');
        item.css('z-index', '').css('top', '').css('position', '');
        item.insertAfter(next);
		var items = $("div#cat-sort").sortable('serialize');
		ajaxOrder(items);
    });

}

function moveUpb(item) {
    var prev = item.prev();
    if (prev.length == 0)
        return;
    prev.css('z-index', 999).css('position','relative').animate({ top: item.height() }, 250);
    item.css('z-index', 1000).css('position', 'relative').animate({ top: '-' + prev.height() }, 300, function () {
        prev.css('z-index', '').css('top', '').css('position', '');
        item.css('z-index', '').css('top', '').css('position', '');
        item.insertBefore(prev);
		$("ul#sortable").each(function( index ) {
			var items = $(this).sortable('serialize');
			ajaxOrder(items);
		});
		
    });
}
function moveDownb(item) {
    var next = item.next();
    if (next.length == 0)
        return;
    next.css('z-index', 999).css('position', 'relative').animate({ top: '-' + item.height() }, 250);
    item.css('z-index', 1000).css('position', 'relative').animate({ top: next.height() }, 300, function () {
        next.css('z-index', '').css('top', '').css('position', '');
        item.css('z-index', '').css('top', '').css('position', '');
        item.insertAfter(next);
		$("ul#sortable").each(function( index ) {
		var items = $(this).sortable('serialize');
		var i = setTimeout(function() {		
			ajaxOrder(items);
		}, 2000);
		});
    });

}

$(document).ready(function () {



    $('ul#sortable').sortable({
		items: ".board-sortable", 
        axis: 'y',
        stop: function (event, ui) {
		
			var csrfName = $('#csrf_name').val();
			var csrfValue = $('#csrf_value').val();
	        var order = $(this).sortable('serialize');
			ajaxOrder(order);
	}
    });
	
$('div#cat-sort').sortable({
		items: ".category-sortable", 
        axis: 'y',
		change: function (event, ui ){ console.log($(this).sortable('serialize')); },
        stop: function (event, ui ){
		var order = $(this).sortable('serialize');	
		ajaxOrder(order);
	}
    });

	$('button.board').click(function() { 
		var btn = $(this);
		var val = btn.val();
		if (val == 'up')
		{
			moveUpb(btn.parents('.board-sortable'));
		}
		else
		{	
			moveDownb(btn.parents('.board-sortable'));
		}
	});	
	
	$('button.category').click(function() { 
		var btn = $(this);
		var val = btn.val();
		if (val == 'up')
		{
			moveUp(btn.parents('.category-sortable'));
		}
		else
		{
			moveDown(btn.parents('.category-sortable'));	
		}
	});	
	
});

</script>
{% endblock %}
